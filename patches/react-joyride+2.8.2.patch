diff --git a/node_modules/react-joyride/dist/index.js b/node_modules/react-joyride/dist/index.js
index 03a2745..c3f58a3 100644
--- a/node_modules/react-joyride/dist/index.js
+++ b/node_modules/react-joyride/dist/index.js
@@ -9,7 +9,7 @@
 
 var _reactFloater = _interopRequireDefault(require("react-floater"));
 
-var ReactDOM = _interopRequireWildcard(require("react-dom"));
+var _client = require("react-dom/client");
 
 var _deepmerge = _interopRequireDefault(require("deepmerge"));
 
@@ -628,7 +628,7 @@
 
     key: "componentWillUnmount",
     value: function componentWillUnmount() {
-      ReactDOM.unmountComponentAtNode(this.tooltip);
+      this.root.unmount();
       /* istanbul ignore else */
 
       if (this.resizeObserver) {
@@ -688,7 +688,11 @@
       document.body.appendChild(this.tooltip);
     }
 
-    ReactDOM.render( /*#__PURE__*/_react.default.createElement(_Tooltip.default, props), this.tooltip);
+    if (!this.root) {
+      this.root = (0, _client.createRoot)(this.tooltip);
+    }
+
+    this.root.render( /*#__PURE__*/_react.default.createElement(_Tooltip.default, props));
   };
 
   _proto.render = function render() {
diff --git a/node_modules/react-joyride/dist/index.mjs b/node_modules/react-joyride/dist/index.mjs
index 19f5d37..278a9c1 100644
--- a/node_modules/react-joyride/dist/index.mjs
+++ b/node_modules/react-joyride/dist/index.mjs
@@ -1,7 +1,7 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 import Floater from 'react-floater';
-import * as ReactDOM from 'react-dom';
+import { createRoot } from 'react-dom/client';
 import deepmerge from 'deepmerge';
 import { canUseDOM, getElement, isElement, isFunction, isNumber, isString, log, onResize, onScroll } from 'react-joyride/lib/utils';
 
@@ -512,7 +512,7 @@
     key: "componentWillUnmount",
     value: function componentWillUnmount() {
       if (this.tooltip) {
-        ReactDOM.unmountComponentAtNode(this.tooltip);
+        this.root.unmount();
       }
 
       /* istanbul ignore else */
@@ -569,7 +569,13 @@
       document.body.appendChild(this.tooltip);
     }
 
-    ReactDOM.render( /*#__PURE__*/React.createElement(Tooltip, props), this.tooltip);
+    if (!this.root) {
+      this.root = createRoot(this.tooltip);
+    }
+
+    this.root.render( /*#__PURE__*/React.createElement(Tooltip, props));
   };
 
   _proto.render = function render() {
